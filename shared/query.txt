-- Create custom ENUM types to enforce data integrity for specific text fields.

CREATE TYPE subscription_status_enum AS ENUM (
  'trial',
  'active',
  'canceled',
  'expired'
);

CREATE TYPE meal_type_enum AS ENUM (
  'breakfast',
  'lunch',
  'dinner',
  'snack'
);

CREATE TYPE suggestion_type_enum AS ENUM (
  'meal',
  'exercise',
  'general'
);


-- Create the "users" table
-- This table stores user account and subscription information.
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  username TEXT NOT NULL UNIQUE,
  email TEXT NOT NULL UNIQUE,
  password TEXT NOT NULL,
  stripe_customer_id TEXT,
  stripe_subscription_id TEXT,
  subscription_status subscription_status_enum DEFAULT 'trial',
  trial_ends_at TIMESTAMP WITH TIME ZONE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create an index on the email for faster lookups.
CREATE INDEX idx_users_email ON users(email);


-- Create the "calorie_goals" table
-- Stores daily calorie and macronutrient goals for each user.
CREATE TABLE calorie_goals (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  date DATE NOT NULL, -- Using DATE type is better for YYYY-MM-DD
  calories INTEGER NOT NULL,
  protein INTEGER NOT NULL,
  carbs INTEGER NOT NULL,
  fat INTEGER NOT NULL,
  -- A user should only have one calorie goal per day.
  UNIQUE (user_id, date)
);

-- Create indexes for faster queries by user and date.
CREATE INDEX idx_calorie_goals_user_id ON calorie_goals(user_id);
CREATE INDEX idx_calorie_goals_date ON calorie_goals(date);


-- Create the "food_entries" table
-- Logs all food items consumed by a user.
CREATE TABLE food_entries (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  date DATE NOT NULL, -- Using DATE type
  meal_type meal_type_enum NOT NULL,
  description TEXT NOT NULL,
  image_url TEXT,
  calories INTEGER NOT NULL,
  protein DECIMAL(8, 2) NOT NULL,
  carbs DECIMAL(8, 2) NOT NULL,
  fat DECIMAL(8, 2) NOT NULL,
  fiber DECIMAL(8, 2),
  sugar DECIMAL(8, 2),
  sodium DECIMAL(8, 2),
  ai_analysis JSONB, -- JSONB is generally preferred over JSON for performance.
  timestamp TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create indexes for faster queries by user and date.
CREATE INDEX idx_food_entries_user_id ON food_entries(user_id);
CREATE INDEX idx_food_entries_date ON food_entries(date);


-- Create the "ai_suggestions" table
-- Stores personalized suggestions generated by an AI.
CREATE TABLE ai_suggestions (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  date DATE NOT NULL, -- Using DATE type
  suggestion_type suggestion_type_enum NOT NULL,
  content TEXT NOT NULL,
  time_of_day TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create indexes for faster queries by user and date.
CREATE INDEX idx_ai_suggestions_user_id ON ai_suggestions(user_id);
CREATE INDEX idx_ai_suggestions_date ON ai_suggestions(date);


-- Create the "daily_meal_plans" table
-- Stores suggested meal plans for users.
CREATE TABLE daily_meal_plans (
  id SERIAL PRIMARY KEY,
  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  date DATE NOT NULL, -- Using DATE type
  meal_type meal_type_enum NOT NULL,
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  estimated_calories INTEGER NOT NULL,
  estimated_protein DECIMAL(8, 2) NOT NULL,
  estimated_carbs DECIMAL(8, 2) NOT NULL,
  estimated_fat DECIMAL(8, 2) NOT NULL,
  ingredients JSONB NOT NULL, -- JSONB can efficiently store an array of strings.
  instructions TEXT,
  is_selected BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create indexes for faster queries by user and date.
CREATE INDEX idx_daily_meal_plans_user_id ON daily_meal_plans(user_id);
CREATE INDEX idx_daily_meal_plans_date ON daily_meal_plans(date);